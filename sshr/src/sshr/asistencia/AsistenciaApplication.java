package sshr.asistencia;import java.util.List;import sshr.asistencia.AsistenciaCrudService;import sshr.domainmodel.EntityFactory;import sshr.domainmodel.BaseEntity;import sshr.domainmodel.asistencia.PerfilHorario;public final class AsistenciaApplication {	private static AsistenciaCrudService _crudService;		static {		try {				_crudService = new AsistenciaCrudService();				} catch (Exception ex) { }	}		/*		SECTION: CRUD[PERFIL-HORARIO]			*/		public static PerfilHorario createPerfilHorario(String desc, String codigo, String nombre) throws AsistenciaException {					try {					PerfilHorario ph = EntityFactory.getNewEntity(PerfilHorario.class);					ph.setDesc(desc);					ph.setCodigo(codigo);					ph.setNombre(nombre);					ph = _crudService.add( ph );					if (ph == null) 						throw new AsistenciaException("No se pudo crear el Perfil de Horario.");										return ph;								} catch (Exception ex) { 									throw new AsistenciaException("An error has occurred, please review the log.", ex);			}		}			public static PerfilHorario updatePerfilHorario(Long id, String desc, String codigo, String nombre) throws AsistenciaException {					try {					PerfilHorario ph = _crudService.find(PerfilHorario.class, id);					ph.setDesc(desc);					ph.setCodigo(codigo);					ph.setNombre(nombre);										ph = _crudService.update( ph );					if (ph == null) 						throw new AsistenciaException("No se pudo actualizar el Perfil de Horario.");																	return ph;								} catch (Exception ex) { 									throw new AsistenciaException("An error has occurred, please review the log.", ex);			}		}		public static List<PerfilHorario> findAllPerfilHorario() throws AsistenciaException {					try {					return _crudService.findAll(PerfilHorario.class);								} catch (Exception ex) { 									throw new AsistenciaException("An error has occurred, please review the log.", ex);			}		}		public static PerfilHorario findPerfilHorario(Long id) throws AsistenciaException {					try {					return _crudService.find(PerfilHorario.class, id);								} catch (Exception ex) { 									throw new AsistenciaException("An error has occurred, please review the log.", ex);			}		}		public static void removePerfilHorario(Long id) throws AsistenciaException {					try {					_crudService.remove(PerfilHorario.class, id);								} catch (Exception ex) { 									throw new AsistenciaException("An error has occurred, please review the log.", ex);			}		}}