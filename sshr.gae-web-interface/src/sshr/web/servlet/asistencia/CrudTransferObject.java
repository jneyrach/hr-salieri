package sshr.web.servlet.asistencia;import sshr.domainmodel.*;import sshr.domainmodel.asistencia.*;import java.util.*;import javax.xml.bind.annotation.*;import flexjson.JSON;@XmlRootElement(name = "TransferObject")@XmlSeeAlso(PerfilHorario.class)public final class CrudTransferObject<T extends BaseEntity> {	public enum SKIP_FIELDS {lkeys, lcolumns, lkeyRows, ldataRows}	// For Xml	private List<T> _xmlDataRows = new ArrayList<T>();	// For JSON	private List<String> lkeys    = new ArrayList<String>();	private List<String> lcolumns = new ArrayList<String>();	private List<List<String>> lkeyRows  = new ArrayList<List<String>>();	private List<List<String>> ldataRows = new ArrayList<List<String>>();	private String[] keys;	private String[] columns;	private String[][] keyRows;	private String[][] dataRows;	@XmlElementWrapper(name = "DataRows")	@XmlElement(name = "DataRow")	public List<T> getXmlDataRows() {		return this._xmlDataRows;	}	@JSON	@XmlTransient	public String[] getKeys() {		return this.keys;	}	@JSON	@XmlTransient	public String[] getColumns() {		return this.columns;	}	@JSON	@XmlTransient	public String[][] getKeyRows() {		return this.keyRows;	}	@JSON	@XmlTransient	public String[][] getDataRows() {		return this.dataRows;	}	public void setXmlDataRows(List<T> xmlDataRows) {		this._xmlDataRows = xmlDataRows;	}	public void addKey(String key) {		this.lkeys.add(key);	}	public void addColumn(String column) {		this.lcolumns.add(column);	}	public void addKeyRow(List<String> keyRow) {		this.lkeyRows.add(keyRow);	}	public void addDataRow(List<String> dataRow) {		this.ldataRows.add(dataRow);	}	public void prepareToSerialize() {		keys = new String[this.lkeys.size()];		for (int i = 0; i < this.lkeys.size(); i++)				keys[i] = this.lkeys.get(i);		columns = new String[this.lcolumns.size()];		for (int i = 0; i < this.lcolumns.size(); i++)				columns[i] = this.lcolumns.get(i);		keyRows = new String[this.lkeyRows.size()] [this.lkeys.size()];		for (int i = 0; i < this.lkeyRows.size(); i++) {			List<String> tmp = this.lkeyRows.get(i);			for (int j = 0; j < this.lkeys.size(); j++) {					if (tmp.size() > j)						keyRows[i][j] = tmp.get(j);					else						keyRows[i][j] = null;			}		}		dataRows = new String[this.ldataRows.size()] [this.lcolumns.size()];		for (int i = 0; i < this.ldataRows.size(); i++) {			List<String> tmp = this.ldataRows.get(i);			for (int j = 0; j < this.lcolumns.size(); j++) {					if (tmp.size() > j)						dataRows[i][j] = tmp.get(j);					else						dataRows[i][j] = null;			}		}	}}