
		public static PerfilHorario createPerfilHorario( String codigo, String nombre, String descripcion) throws AsistenciaException {
		
			try {
					PerfilHorario e = EntityFactory.getNewEntity(PerfilHorario.class);
                    e.setCodigo(codigo);
                    e.setNombre(nombre);
                    e.setDescripcion(descripcion);

					e = _crudService.add( e );

					if (e == null) 
						throw new AsistenciaException("ERROR: Al tratar de crear un registro de la clase PerfilHorario.");

                        
					return e;
					
			} catch (Exception ex) { 
			
						throw new AsistenciaException("An error has occurred, please review the log.", ex);
			}
		}
	
        
		public static PerfilHorario updatePerfilHorario( Long id, String codigo, String nombre, String descripcion) throws AsistenciaException {
		
			try {
					PerfilHorario e = _crudService.find(PerfilHorario.class, id);
                    e.setCodigo(codigo);
                    e.setNombre(nombre);
                    e.setDescripcion(descripcion);
					
					e = _crudService.update( e );

					if (e == null) 
						throw new AsistenciaException("ERROR: Al tratar de actualizar un registro de la clase PerfilHorario.");
						
						
					return e;
					
			} catch (Exception ex) { 
			
						throw new AsistenciaException("An error has occurred, please review the log.", ex);
			}
		}

		public static List<PerfilHorario> findAllPerfilHorario() throws AsistenciaException {
		
			try {
					return _crudService.findAll(PerfilHorario.class);
					
			} catch (Exception ex) { 
			
						throw new AsistenciaException("An error has occurred, please review the log.", ex);
			}
		}

		public static PerfilHorario findPerfilHorario(Long id) throws AsistenciaException {
		
			try {
					return _crudService.find(PerfilHorario.class, id);
					
			} catch (Exception ex) { 
			
						throw new AsistenciaException("An error has occurred, please review the log.", ex);
			}
		}

		public static void removePerfilHorario(Long id) throws AsistenciaException {
		
			try {
					_crudService.remove(PerfilHorario.class, id);
					
			} catch (Exception ex) { 
			
						throw new AsistenciaException("An error has occurred, please review the log.", ex);
			}
		}
